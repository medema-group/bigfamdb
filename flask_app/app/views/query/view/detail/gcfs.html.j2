<div class="row mt-2 mb-4">
	<div class="col">
		<h3>GCF hits</h3>
		<div class="row mt-4">
			<!-- GCF hits distances -->
			<!--div class="col-6 text-center" style="min-width: 480px;">
				<div id="hist_gcf_dists">
					<div class="spinner-border text-info" role="status">
						<span class="sr-only">Loading...</span>
					</div>
				</div>
			</div-->
			<!-- features heatmap -->
			<!--div class="col-6 text-center" style="min-width: 480px;">
				<div id="features_heatmap">
					<div class="spinner-border text-info" role="status">
						<span class="sr-only">Loading...</span>
					</div>
				</div>
			</div-->
		</div>
		<div class="row mt-2">
			<div class="col">
				<table id="table_gcf_hits" class="table table-striped table-bordered table-hover nowrap">
					<thead class="thead-light">
						<tr>
							<th>distance</th>
							<th>GCF</th>
							<th>
								size (#BGCs) <a href="javascript:void();" class="badge badge-info badge-pill ml-2" data-toggle="popover" data-trigger="hover" data-html="true" data-content="BGCs paired to the GCF model on a best-match basis (rank-0)<br />while satisfying the specified distance threshold <strong>(d <= T)</strong>." title="Explanation">&nbsp;?&nbsp;</a>
							</th>
							<th>
								representative class
							</th>
							<th>
								representative taxon <a href="javascript:void();" class="badge badge-info badge-pill ml-2" data-toggle="popover" data-trigger="hover" data-html="true" data-content="Genus having the most BGCs in a GCF" title="Explanation">&nbsp;?&nbsp;</a>
							</th>
						</tr>
					</thead>
					<tbody class="tbody">
					</tbody>
				</table>
			</div>
		</div>
		<!-- scripts -->
		<script type="text/javascript">
			$(document).ready(function(){
				$("#table_gcf_hits").DataTable({
					searching: false,
					ordering:  false,
					serverSide: true,
					responsive: false,
					processing: true,
					ajax: {
						url: "{{ url_for('root.page') }}api/query/detail/get_gcf_hits_table",
						type: "GET",
						data: {
							"bgc_id": $("#bgc_id").val(),
							"report_id": $("#report_id").val(),
							"run_id": $("#run_id").val()
						}
					},
					"columnDefs": [
						{
							"targets": 3, // class
							render: function(data, type, row, meta) {
								let html_text = "";
								let bgc_total = row[2];

								if (data.length > 0) {
									html_text += data[0][0] + " (" + (data[0][1] / bgc_total * 100).toFixed(0) + "%)";
								} else {
									html_text += "n/a";
								}

								return html_text;
							}
						},
						{
							"targets": 4, // taxon
							render: function(data, type, row, meta) {
								let html_text = "";
								let bgc_total = row[2];

								if (data.length > 0) {
									html_text += "<i>" + data[0][0] + "</i>" + " (" + (data[0][1] / bgc_total * 100).toFixed(0) + "%)";
								} else {
									html_text += "n/a";
								}

								return html_text;
							}
						},
						{
							"targets": 1, // name
							render: function(data, type, row, meta) {
								return "<a class='btn btn-info' href='javascript:void(0);' onclick='openGCFComparisonWindow(" + data[0] + ", \"" + data[1] + "\", " + row[0] + ")'>" + data[1] + "</a>";
							}
						},
						{ className: "text-right", "targets": [0, 2] },
						{ className: "text-center", "targets": [] }
					],
					"drawCallback": function( settings ) {
				        // --
				    },
					"createdRow": function( row, data, dataIndex ) {
					    if (data[0] <= parseFloat($("#threshold").val())) {
					    	$(row).addClass("table-success");
					    } else {
					    	$(row).addClass("table-danger");
					    }
					}
				});
			});
		</script>
	</div>
</div>
<!-- scripts -->
<script type="text/javascript">	
	var domainColors = {} // for page-wide arrower coloring
	function getRandomColor(alpha) {
		let r = Math.floor(Math.random() * 256);
		let g = Math.floor(Math.random() * 256);
		let b = Math.floor(Math.random() * 256);
		return ("rgba(" + [r, g, b, alpha].join(",") + ")");
	}

	// open modal window
	function openGCFComparisonWindow(gcf_id, gcf_name, dist) {
		let tab_query = $("<div class='mb-4'><strong>" + $("#page_title").text() + "</strong> (dist: " + dist + ")</div>");
		tab_query.append("<div id='compared_bgc_arrower' class='overflow-auto pl-4 pr-4 mt-2 mb-4'><div class='spinner-border text-info' role='status'><span class='sr-only'>Loading...</span></div></div>");
		if (dist <= parseFloat($("#threshold").val())) {
	    	tab_query.addClass("table-success");
	    } else {
	    	tab_query.addClass("table-danger");
	    }
		$.get({
			url: "{{ url_for('root.page') }}api/query/detail/get_arrower_objects",
			data: {
				"bgc_id": $("#bgc_id").val(),
				"report_id": $("#report_id").val()
			},
			dataType: "json",
			success: function(response) {
				let bgcObject = response[$("#bgc_id").val()];
				bgcObject["orfs"].forEach(function(cds) {
					cds["domains"].forEach(function(domain) {
						let domCore = domain.code.split(" [")[0];
						if (!domainColors.hasOwnProperty(domCore)) {
							domainColors[domCore] = getRandomColor(0.5);
						}
						domain["color"] = domainColors[domCore];
					});
				});
				$("#compared_bgc_arrower").html(Arrower.drawClusterSVG(bgcObject, height=30));
			}
		});
		let tab_arrower = $("<table class='table table-striped table-borderless table-hover nowrap'>");
		tab_arrower.append("<thead class='d-none'><tr><th>dataset</th><th>BGC</th><th>dist(to centroid)</th><th>Arrower</th></tr></thead>");
		tab_arrower.append("<tbody class='tbody'>");
		tab_arrower.DataTable({
			searching: false,
			ordering:  false,
			serverSide: true,
			processing: true,
			scrollX: true,
			ajax: {
				url: "{{ url_for('root.page') }}api/gcf/get_member_list_arower",
				type: "GET",
				data: {
					"gcf_id": gcf_id,
					"run_id": $("#run_id").val()
				}
			},
			"columnDefs": [
				{
					"targets": 0, // dataset name
					render: function(data, type, row, meta) {
						return "<a class='btn btn-info' href='{{ url_for('root.page') }}dataset/" + data[0] + "'>" + data[1] + "</a>";
					}
				},
				{
					"targets": 1, // bgc name
					render: function(data, type, row, meta) {
						return "<a class='btn btn-info' href='{{ url_for('root.page') }}dataset/" + data[2] + "/bgc/" + data[0] + "/run/" + meta.settings.json.run_id + "'>" + data[1] + "</a>";
					}
				},
				{
					"targets": 2, // dist
					render: function(data, type, row, meta) {
						return "dist: " + data;
					}
				},
				{
					"targets": 3, // arrower
					render: function(data, type, row, meta) {
						return "<div class='arrower_container overflow-auto pl-4 pr-4 mt-2' data-bgc_id='" + data + "'><div class='spinner-border text-info' role='status'><span class='sr-only'>Loading...</span></div></div>";
					}
				}
			],
			"createdRow": function(row, data, dataIndex ) {
			    if (data[2] <= parseFloat($("#threshold").val())) {
			    	$(row).addClass("table-success");
			    } else {
			    	$(row).addClass("table-danger");
			    }
			    let arrower_container = $(row).find(".arrower_container")[0];
			    let bgc_id = parseInt(arrower_container.dataset.bgc_id);
			    $.get({
					url: "{{ url_for('root.page') }}api/bgc/get_arrower_objects",
					data: {
						"bgc_id": bgc_id,
						"run_id": $("#run_id").val()
					},
					dataType: "json",
					success: function(response) {
						let bgcObject = response[bgc_id];
						bgcObject["orfs"].forEach(function(cds) {
							cds["domains"].forEach(function(domain) {
								let domCore = domain.code.split(" [")[0];
								if (!domainColors.hasOwnProperty(domCore)) {
									domainColors[domCore] = getRandomColor(0.5);
								}
								domain["color"] = domainColors[domCore];
							});
						});
						$(arrower_container).html(Arrower.drawClusterSVG(bgcObject, height=30));
					}
				});
			}
		});
		showModal("<a class='btn btn-info' href='{{ url_for('root.page') }}run/" + $("#run_id").val() +  "/gcf/" + gcf_id + "'>" + gcf_name + "</a>", "",
			on_show=function(){
				$("#modal-window .modal-dialog").css("max-width", "90vw");
				$("#modal-window").find(".modal-body").html("");
				$("#modal-window").find(".modal-body").append(tab_query);
				tab_arrower.parents(".dataTables_wrapper").appendTo($("#modal-window").find(".modal-body"));
			},
			on_close=function(){
				$("#modal-window .modal-dialog").css("max-width", null);
			}
		);
	}
</script>