<div class="row mt-2 mb-4">
	<div class="col">
		<div class="row">
			<div class="col">
				<h3>Filter</h3>
                <!-- first row -->
                <div class="row mt-4 list-group list-group-horizontal">
                    <div class="col-1"></div>
                    <div class="col-3 list-group-item">
                        <strong>Dataset</strong>
                        <div>
                            (
                            <a href="javascript:void();" onclick="$('.filter-ds').prop('checked', true)">select all</a>
                            |
                            <a href="javascript:void();" onclick="$('.filter-ds').prop('checked', false)">clear all</a>
                            )
                        </div>
                    </div>
                    <div class="col-7 list-group-item">
                        {% for ds_id, ds_name in datasets_list %}
                            <span class="d-inline-flex pr-3 form-check">
                                <input type="checkbox" checked="checked" class="form-check-input filter-ds" value="{{ ds_id }}" />
                                <label class="form-check-label" for="filter-ds-{{ ds_id }}">{{ ds_name }}</label>
                            </span>
                        {% endfor %}
                    </div>
                    <div class="col-1"></div>
                </div>
                <!-- second row -->
                <div class="row list-group list-group-horizontal">
                    <div class="col-1"></div>
                    <div class="col-3 border-top-0 list-group-item">
                        <strong>BGC class</strong>
                        <div>
                            (
                            <a href="javascript:void();" onclick="$('.filter-bc').prop('checked', true)">select all</a>
                            |
                            <a href="javascript:void();" onclick="$('.filter-bc').prop('checked', false)">clear all</a>
                            )
                        </div>
                    </div>
                    <div class="col-7 border-top-0 list-group-item">
                        {% for class_id, class_name in classes_list %}
                            <span class="d-inline-flex pr-3 form-check">
                                <input type="checkbox"checked="checked" class="form-check-input filter-bc" value="{{ class_id }}" />
                                <label class="form-check-label" for="filter-bc-{{ class_id }}">{{ class_name }}</label>
                            </span>
                        {% endfor %}
                    </div>
                    <div class="col-1"></div>
                </div>
                <!-- third row -->
                <div class="row list-group list-group-horizontal">
                    <div class="col-1"></div>
                    <div class="col-3 border-top-0 list-group-item">
                        <strong>Taxon</strong>
                        <a href="javascript:void();" class="badge badge-info badge-pill ml-2" data-toggle="popover" data-trigger="hover" data-html="true" data-content="Apply OR filters. When used alongside 'Domains' filtering, may cause timeout; make sure to select a narrower taxonomy range (i.e. species/genus level) in that case." title="Note">&nbsp;?&nbsp;</a>
                    </div>
                    <div class="col-7 border-top-0 list-group-item">
                        <input type="text" id="filter-taxa" placeholder="Type first four-letters" />
                    </div>
                    <div class="col-1"></div>
                </div>
                <!-- fourth row -->
                <div class="row list-group list-group-horizontal">
                    <div class="col-1"></div>
                    <div class="col-3 border-top-0 list-group-item">
                        <strong>Domains</strong>
                        <a href="javascript:void();" class="badge badge-info badge-pill ml-2" data-toggle="popover" data-trigger="hover" data-html="true" data-content="Apply OR filters. When used alongside 'Taxon' filtering, may cause timeout; make sure to select a narrower taxonomy range (i.e. species/genus level) in that case." title="Note">&nbsp;?&nbsp;</a>
                    </div>
                    <div class="col-7 border-top-0 list-group-item">
                        <input type="text" id="filter-domains" placeholder="Type first four-letters" />
                    </div>
                    <div class="col-1"></div>
                </div>
                <!-- fifth row -->
                <div class="row list-group list-group-horizontal">
                    <div class="col-1"></div>
                    <div class="col-3 border-top-0 list-group-item">
                        <strong>Misc.</strong>
                    </div>
                    <div class="col-7 border-top-0 list-group-item">
                    	<ul class="list-group panel">
                    		<li class="border list-group-item">
                    			<strong>Nucleotide length</strong> from
                    			<input type="text" id="filter-nt_length-from" class="col-2 text-right" placeholder="-" /> to
                    			<input type="text" id="filter-nt_length-to" class="col-2 text-right" placeholder="-" /> bp
                    		</li>
                    		<li class="border border-top-0 list-group-item">
                    			<span class="d-inline-flex pr-3 form-check">
	                                <input type="checkbox" class="form-check-input" id="filter-complete_only" />
	                                <label class="form-check-label font-weight-bold" for="filter-complete_only">Complete BGC only</label>	                                
	                            </span>
                    		</li>
                    	</ul>
                    </div>
                    <div class="col-1"></div>
                </div>
                <!-- last row -->
                <div class="row list-group list-group-horizontal">
                    <div class="col-1"></div>
                    <div class="col-10 border-top-0 list-group-item text-right">
                        <button type="button" id="submit_filter" class="btn btn-info">Apply</button>
                    </div>
                    <div class="col-1"></div>
                </div>
			</div>
		</div>
		<div class="row mt-4">
			<div class="col">
				<h3>Results</h3>
				<table id="table_bgcs" class="table table-striped table-bordered table-hover nowrap">
					<thead class="thead-light">
						<tr>
							<th>dataset</th>
							<th>genome</th>
							<th>BGC</th>
							<th>taxon</th>
							<th>class</th>
							<th>length (bp)</th>
							<th>completeness</th>
							<th>details</th>
						</tr>
					</thead>
					<tbody class="tbody">
					</tbody>
				</table>
			</div>
		</div>
	</div>
</div>
<script type="text/javascript">
	$(document).ready(function(){

        $('#filter-taxa').tagsinput({
          itemValue: "id", // needed for the temporary bugfix
          itemText: "name", // needed for the temporary bugfix
          typeaheadjs: {
            displayKey: 'name', // needed for the temporary bugfix
            valueKey: 'id', // needed for the temporary bugfix
            name: 'taxons',
            limit: 999999999999, // needed for the temporary bugfix
            source: function(query, sync, async) {
                if (query.length >= 4) {
                   $.getJSON("{{ url_for('root.page') }}api/autocomplete_taxon/?q=" + query, function(data) {
                      async(data);
                   });
               }
            }
          }
        });
    
        $('#filter-domains').tagsinput({
          itemValue: "id", // needed for the temporary bugfix
          itemText: "name", // needed for the temporary bugfix
          typeaheadjs: {
            displayKey: 'name', // needed for the temporary bugfix
            valueKey: 'id', // needed for the temporary bugfix
            name: 'domains',
            limit: 999999999999, // needed for the temporary bugfix
            source: function(query, sync, async) {
                if (query.length >= 4) {
                   $.getJSON("{{ url_for('root.page') }}api/autocomplete_hmm/?q=" + query, function(data) {
                      async(data);
                   });
               }
            }
          }
        });
    
		$("#submit_filter").click(function(){
			$('#table_bgcs').DataTable().ajax.reload();
		});
		$("#table_bgcs").DataTable({
			searching: false,
			ordering:  false,
			serverSide: true,
			responsive: false,
			processing: true,
			ajax: {
				url: "{{ url_for('root.page') }}api/dataset/get_bgc_table",
				type: "GET",
				data: function(d) {
					if ($(".filter-ds:not(:checked)").length > 0) {
						d["dataset_id"] = $(".filter-ds:checked").map(function(){
						    return $(this).val()
						}).get();
					}
					if ($(".filter-bc:not(:checked)").length > 0) {
						d["chem_class_id"] = $(".filter-bc:checked").map(function(){
						    return $(this).val()
						}).get();
					}
					d["length_nt_from"] = $("#filter-nt_length-from").val();
					d["length_nt_to"] = $("#filter-nt_length-to").val();
					if ($("#filter-complete_only").prop("checked")) {
						d["complete_only"] = true;
					}
					d["taxons"] = $("#filter-taxa").val();
					d["hmms"] = $("#filter-domains").val();
				}
			},
			"columnDefs": [
				{
					"targets": 3, // taxonomy
					render: function(data, type, row, meta) {
						let html_text = "";
						let taxon_desc = meta.settings.json.taxon_desc;
						for (let index = taxon_desc.length - 1; index >= 0; index--) {
							let value = taxon_desc[index];
							if (data.hasOwnProperty(value[0])) {
								html_text += "<i>" + data[value[0]] + "</i> (" + value[1] + ")";
								break;
							}
						}

						let popover_content = "<div>";
						taxon_desc.forEach(function(value, index) {
							if (data.hasOwnProperty(value[0])) {
								popover_content += "<div class=\"row\"><div class=\"col-4\"><strong>" + value[1] + "</strong></div><div class=\"col-8 text-right\"><i>" + data[value[0]] + "</i></div></div>";
							} else {
								popover_content += "<div class=\"row\"><div class=\"col-4\"><strong>" + value[1] + "</strong></div><div class=\"col-8 text-right\">n/a</div></div>";
							}
						});
						popover_content += "</ul>";

						if (html_text.length < 1) {
							html_text = "n/a";
						} else {
							html_text += "<a href='javascript:void(0)' class='taxonomy_pops badge badge-info badge-pill ml-2' data-trigger='hover' data-html='true' data-content='" + popover_content + "' title='Taxonomy'>?</a>"
						}
						return html_text;
					}
				},
				{
					"targets": 4, // chem_class
					render: function(data, type, row, meta) {
						let html_text = "<ul class='list-unstyled'>";
						data.forEach(function(value, index) {
							html_text += "<li>" + value[0] + ":" + value[1] + "</li>";
						});
						html_text += "</ul>"
						return html_text;
					}
				},
				{
					"targets": 7, // details
					render: function(data, type, row, meta) {
						return "<a href='{{ url_for('root.page') }}dataset/0/bgc/" + data + "'><button type='button' class='btn btn-sm btn-info'>view</button></a>";
					}
				},
				{
					"targets": 5,
					render: function(data, type, row, meta) {
						return data.toLocaleString();
					}
				},
			{ className: "text-right", "targets": [5] },
			{ className: "text-center", "targets": [6, 7] }
			],
			"drawCallback": function( settings ) {
		        $(".taxonomy_pops").popover({
		        	"template": '<div class="popover popover-taxonomy" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'
		        });
		    }
		});
	});
</script>